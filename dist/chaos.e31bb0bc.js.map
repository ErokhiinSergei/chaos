{"version":3,"sources":["index.js"],"names":["draw","canvas","document","querySelector","width","canvasWidth","window","innerWidth","height","canvasHeight","innerHeight","ctx","getContext","canvasData","getImageData","getRandomInt","min","max","Math","round","random","drawPixel","x","y","fillStyle","beginPath","arc","PI","fill","render","point","fillRect","side","A","B","C","basePoints","pointBetween","a","b","takeRandomBasePoint","length","generateRandomPoint","currentI","inThisLoop","currPoint","doTriangle","end","setTimeout","Infinity","console","log"],"mappings":"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","file":"chaos.e31bb0bc.js","sourceRoot":"..","sourcesContent":[";(function draw() {\n  const canvas = document.querySelector('canvas')\n  canvas.width = canvasWidth = window.innerWidth - 100\n  canvas.height = canvasHeight = window.innerHeight - 100\n  const ctx = canvas.getContext('2d')\n  const canvasData = ctx.getImageData(0, 0, canvasWidth, canvasHeight)\n\n  function getRandomInt(min, max) {\n    return Math.round(Math.random() * (max - min)) + min\n  }\n\n  function drawPixel(x, y) {\n    ctx.fillStyle = '#fff'\n    ctx.beginPath()\n    ctx.arc(x, y, 1, 0, Math.PI * 2, true)\n    ctx.fill()\n  }\n\n  function render(point) {\n    ctx.fillRect(point.x, point.y, 1, 1)\n    drawPixel(point.x, point.y, 255, 0, 0, 255)\n  }\n\n  const side = Math.min(canvasWidth, canvasHeight)\n\n  const A = { x: 0, y: side }\n  const B = { x: side / 2, y: 0 }\n  const C = { x: side, y: side }\n  const basePoints = [A, B, C]\n\n  function pointBetween(a, b) {\n    return { x: (a.x + b.x) / 2, y: (a.y + b.y) / 2 }\n  }\n\n  function takeRandomBasePoint() {\n    return basePoints[getRandomInt(0, basePoints.length - 1)]\n  }\n\n  function generateRandomPoint() {\n    return { x: getRandomInt(0, 100), y: getRandomInt(0, 100) }\n  }\n\n  let currentI = 0\n  let inThisLoop = 0\n  let currPoint = generateRandomPoint()\n  function doTriangle(end) {\n    currPoint = pointBetween(currPoint, takeRandomBasePoint())\n    render(currPoint)\n\n    if (++currentI < end) {\n      if (++inThisLoop < 5000) {\n        doTriangle(end)\n      } else {\n        inThisLoop = 0\n        window.setTimeout(() => doTriangle(end), 0)\n      }\n    }\n  }\n\n  doTriangle(Infinity)\n  console.log('end')\n})()\n"]}